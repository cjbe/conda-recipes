diff --git a/bfd/elf32-or1k.c b/bfd/elf32-or1k.c
index 1daa7b6..522f141 100644
--- a/bfd/elf32-or1k.c
+++ b/bfd/elf32-or1k.c
@@ -807,21 +807,22 @@ or1k_elf_relocate_section (bfd *output_bfd,
   Elf_Internal_Rela *relend;
   struct elf_or1k_link_hash_table *htab = or1k_elf_hash_table (info);
   bfd *dynobj;
   asection *sreloc;
   bfd_vma *local_got_offsets;
-  asection *sgot;
+  asection *sgot, *sgotplt;
 
   if (htab == NULL)
     return FALSE;
 
   dynobj = htab->root.dynobj;
   local_got_offsets = elf_local_got_offsets (input_bfd);
 
   sreloc = elf_section_data (input_section)->sreloc;
 
   sgot = htab->sgot;
+  sgotplt = htab->sgotplt;
 
   symtab_hdr = &elf_tdata (input_bfd)->symtab_hdr;
   sym_hashes = elf_sym_hashes (input_bfd);
   relend = relocs + input_section->reloc_count;
 
@@ -994,13 +995,17 @@ or1k_elf_relocate_section (bfd *output_bfd,
 
           break;
 
         case R_OR1K_GOTOFF_LO16:
         case R_OR1K_GOTOFF_HI16:
-          /* Relocation is offset from GOT.  */
-          BFD_ASSERT (sgot != NULL);
-          relocation -= sgot->output_section->vma;
+          /* Relocation is offset from the _GLOBAL_OFFSET_TABLE_ symbol, which is
+             located at the start of PLT (if there's one) or GOT.
+             See _bfd_elf_create_got_section.  */
+          relocation
+            -= (htab->root.hgot->root.u.def.value
+                + htab->root.hgot->root.u.def.section->output_offset
+                + htab->root.hgot->root.u.def.section->output_section->vma);
           break;
 
         case R_OR1K_INSN_REL_26:
         case R_OR1K_HI_16_IN_INSN:
         case R_OR1K_LO_16_IN_INSN:

